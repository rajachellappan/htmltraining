/**********************************************************************************************************
*File				:A4.6.txt
*Author Name			:Raja C
*Description			:Pseudocode to sort and search a number in a array using binary search
*Version			:1.0
*Last Modified Date		:02-Sept-2015
*Change Description		:Initial version created
**********************************************************************************************************/
BEGIN
	DECLARE num[5], num1[5] AS INTEGER ARRAY
	DECLARE num2 AS INTEGER
	PROMPT "Enter 5 numbers" 
	FOR index= 1 To 5
		ACCEPT num[index]
	END FOR
	sortarray(num[5])
	PROMPT "Enter the number to be search in the array" AND STORE IN num2
	searcharray(num[5],num2)
END


/*******************************************************************************************
*Module Name			:sortarray()
*Input parameters		:num1[5]
*Return Type			:INTEGER ARRAY
*Author			        :Raja C
*Creation Date			:02-Sept-2015
*Description			:Sorting of an array using bubble sort
*******************************************************************************************/
SUB sortarray(num1[5])
	FOR index=1 TO 5
		FOR index= 1 TO 4
			IF(num1[index]<num1[index+1]) THEN
				SWAP num1[index] AND num1[index+1]
			ELSE 
				CONTINUE
			END IF
		END FOR
	END FOR
END SUB

/*******************************************************************************************
*Module Name			:searcharray()
*Input parameters		:num1[5],num2
*Return Type			:INTEGER ARRAY
*Author			        :Raja C
*Creation Date			:02-Sept-2015
*Description			:Searching of a number using binary search 
*******************************************************************************************/
SUB searcharray(num1[5],num2)
	DECLARE low, high, mid AS INTEGER
	INITIALIZE low TO 0
	INITIALIZE high TO 5
	WHILE(low<=high)
	DO 
		CALCULATE mid=(low+high)/2
		IF(num2==num1[mid]) THEN
			PRINT "Element found at position", mid
		ELSE IF(num2<num1[mid]) THEN
			CALCULATE high=mid-1
		ELSE IF(num2>num1[mid]) THEN
			CALCULATE low=mid+1
		ELSE
			RAISE NoSuchElement("Element not found"+num2)
		END IF
	END WHILE
END SUB
	
		 